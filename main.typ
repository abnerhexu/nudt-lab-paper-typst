#import "labtemplate.typ": *
#show: nudtlabpaper.with(title: "",
  author1: "和子煦", 
  id1: "202102000000", 
  author2: "小和煦",
  id2: "202102000001",
  advisor: "药老师",
  jobtitle: "教授",
  lab: "306-612",
  date: "2023.10.21"
)

= 实验目的和内容

#para["QUIC（Quick UDP Internet Connections）是一种基于UDP的传输层协议，旨在提高网络连接的速度和可靠性。QUIC采用了多种技术来实现这一目标，包括加密、多路复用和拥塞控制。QUIC目前正在被广泛使用，包括Google Chrome、Firefox、Opera等浏览器都支持QUIC。QUIC还被用于许多其他应用程序，如视频会议、游戏等。"]

#para["QUIC协议是一种基于UDP的传输层协议，旨在提高网络连接的速度和可靠性。使用QUIC协议，可以为用户带来以下好处：更快的网络速度：QUIC协议可以比TCP更快地传输数据，这对于Web浏览、视频会议、游戏等应用场景非常有利。更高的安全性：QUIC协议使用了TLS/SSL协议来提供安全性，防止数据被窃听或篡改。更强的适应性：QUIC协议在弱网环境下也能提供良好的性能，这对于物联网等应用场景非常重要。"]

= 实验设计与实现

#para["计算机体系结构是计算机系统的基础架构，它定义了计算机硬件和软件之间的交互方式，以及数据和指令在计算机内部的传输和处理方式。通过合理设计和优化计算机体系结构，可以提高计算机的性能和效率，实现各种复杂的计算任务。"]

#para["在计算机体系结构中，中央处理器（CPU）是核心组件，负责执行指令和处理数据。CPU包括算术逻辑单元（ALU）和控制单元（CU），ALU负责执行算术和逻辑运算，而CU负责控制指令的执行顺序和数据的传输。"]

= 实验结果

#para["在C++中，将函数前加上`template <typename scalar_t>`表示该函数是一个模板函数，其中`scalar_t`是一个类型参数。通过使用模板，可以在编译时生成多个具体的函数实例，每个实例使用不同的类型作为参数。这样可以实现代码的通用性，使函数能够适用于不同的数据类型。"]